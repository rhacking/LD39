#version 100

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

attribute vec3 position;
varying vec3 frag_pos;
varying vec2 frag_texCoord;
attribute vec2 texCoord;
attribute vec3 tangent;
attribute vec3 normal;
varying mat3 TBN;
attribute vec4 color;

void main()
{
    gl_Position = ((projection * view) * model) * vec4(position, 1.0);
    frag_pos = (model * vec4(position, 1.0)).xyz;
    frag_texCoord = texCoord;
    vec3 T = normalize(vec3((model * vec4(normalize(tangent), 0.0)).xyz));
    vec3 N = normalize(vec3((model * vec4(normalize(normal), 0.0)).xyz));
    vec3 B = cross(T, N);
    TBN = mat3(vec3(T), vec3(B), vec3(N));
}

